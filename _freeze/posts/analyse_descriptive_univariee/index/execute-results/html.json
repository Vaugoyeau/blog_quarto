{
  "hash": "d25775ad983872f1074f1bdaf7a992c9",
  "result": {
    "markdown": "---\ntitle: \"Analyse descriptive univariée avec R sur les données de `{palmerpenguins}`\"\nauthor: \"Marie Vaugoyeau\"\ndate: \"2023/06/27\"\ndate-format: \"D MMMM YYYY\"\ncategories: [twitch, Rnewbies, analyse de données, statistiques]\ntoc: true\ntoc-title: Sur cette page\n---\n\n\n[![](goutte_eau.png){fig-align=\"center\"}](https://500px.com/p/antoinemach?view=photos)\n\n::: {.callout-note icon=\"false\"}\n[**Twitch du 27 juin 2023**](https://www.twitch.tv/videos/1857087169).\n\nCode disponible sur [GitHub](https://github.com/Vaugoyeau/twitch_analyse_descriptive).\n:::\n\n\n\n\n\n# Le pipe\n\nLors des [Rencontres R 2023 à Avignon](https://rr2023.sciencesconf.org/), j'ai parlé du pipe pendant ma présentation.\\\nSuite aux discussions que j'ai eu dessus après, je préfère détailler à nouveau ici le `pipe %>%` du package `{margittr}` et le `pipe natif |>` maintenant présent dans le package `{base}` (pour les versions de R \\> 4.1).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sans pipe\nmean(sqrt(c(1:10)*3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.89162\n```\n:::\n\n```{.r .cell-code}\n# avec pipe\nc(1:10)*3 |> \n  sqrt() |> \n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1.732051  3.464102  5.196152  6.928203  8.660254 10.392305 12.124356\n [8] 13.856406 15.588457 17.320508\n```\n:::\n\n```{.r .cell-code}\n# attention à l'utilisation des parenthèses\n(c(1:10)*3) |> \n  sqrt() |> \n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.89162\n```\n:::\n:::\n\n\n::: {.callout-note icon=\"false\"}\nIci cela fonctionne sans charger de package car j'utilise le pipe natif `|>`.\\\n:::\n\nCette option est modifiable dans *Tools \\> Global Options \\> Code \\> Editing*\n\nSi l'option `pipe natif` est décroché, le raccourci clavier `Ctrl + Maj + M` donne le pipe de `{magrittr}` mais ne permet pas de l'utiliser sans charger le package !\\\n\n::: {.callout-caution icon=\"false\"}\nLors du chargement de `{tidyverse}` le pipe de `{magrittr}` est automatiquement chargé.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(c(1:10)*3) %>% \n  sqrt() %>% \n  mean()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in (c(1:10) * 3) %>% sqrt() %>% mean(): impossible de trouver la fonction \"%>%\"\n```\n:::\n\n```{.r .cell-code}\nlibrary(magrittr)\n(c(1:10)*3) %>% \n  sqrt() %>% \n  mean()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.89162\n```\n:::\n:::\n\n\nD'un point de vu utili\n\nsation, `|>` est plus rapide que `%>%` mais implique d'utiliser une version postérieure à `4.1`.\n\n# Les données\n\nUtilisation du jeu de données `penguins` du [package `{palmerpenguins}`](https://allisonhorst.github.io/palmerpenguins/) qui recense les caractéristiques des pingouins de l'archipel de Palmer.\\\nPlus d'informations sur ce jeu de données dans la page d'aide `help(penguins)`.\n\n# Visualisation rapide des données\n\nAvec la fonction très généraliste `plot()` chargée de base dans l'environnement.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n\n```{.r .cell-code}\nView(penguins)\n\nplot(penguins)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visualiser_les_donnnes-1.png){width=672}\n:::\n:::\n\n\nPour avoir un apercu des données il est intéressant d'utiliser la fonction `summary()` présent dans le package `{base}`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n```\n:::\n:::\n\n\nIl y a des valeurs manquantes, il faut donc les visualiser.\\\n[`{naniar}`](http://naniar.njtierney.com/) est un package très performant pour travailler sur les données manquantes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnaniar::gg_miss_upset(penguins)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visualiser_les_donnnees_manquantes-1.png){width=672}\n:::\n:::\n\n\nPour visualiser différemment le tableau de données, il est possible d'utiliser la fonction `glimpse()` du `{tidyverse}`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n\n::: {.callout-caution icon=\"false\"}\nLe chargement de certain package remplace des fonctions déjà chargées par celles chargée en dernière.\\\n*Par exemple, le chargement du package `{tidyverse}` ou `{dplyr}` remplace la fonction `filter()` du package `{stat}` par la sienne.*\n:::\n\n# Analyse univariée\n\n## Variable qualitative\n\nIl y a trois variables qualitatives ici : `species`, `island` et `sex`.\\\nToutes les trois sont finis -\\> donc on peut réaliser directement des tableaux de contingence.\n\n### Tableau de contingence\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fonction `table()` du package `{base}`\ntable(penguins$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Adelie Chinstrap    Gentoo \n      152        68       124 \n```\n:::\n\n```{.r .cell-code}\ntable(penguins$island)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Biscoe     Dream Torgersen \n      168       124        52 \n```\n:::\n\n```{.r .cell-code}\ntable(penguins$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nfemale   male \n   165    168 \n```\n:::\n\n```{.r .cell-code}\n# ne permet pas de voir les NA !\n\n# fonction `count()` du package `{dplyr}`\ncount(penguins, sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  sex        n\n  <fct>  <int>\n1 female   165\n2 male     168\n3 <NA>      11\n```\n:::\n:::\n\n\n::: {.callout-caution icon=\"false\"}\nIl vaut mieux utiliser `count()` de `{dplyr}` pour réaliser les tableaux de contingence car il permet de voir les valeurs manquantes (`NA`).\n:::\n\n### Représentation graphique\n\nRessource conseillée pour la réalisation de graphiques : [From Data to Viz](https://www.data-to-viz.com/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# diagramme en barres\npenguins |> \n  ggplot() +\n  aes(x = island) +\n  geom_bar() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/representation_graphique-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# diagramme en barres colorées par l'espèces\npenguins |> \n  ggplot() +\n  aes(x = island, fill = species) +\n  geom_bar() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/representation_graphique-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# diagramme circulaire\npenguins |> \n  count(sex) |> \n  ggplot() +\n  aes(x = \"\", y = n, fill = sex) +\n  geom_bar(stat = \"identity\") +\n  coord_polar(\"y\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/representation_graphique-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# adapter la couleur\ncouleur <- c(\"female\" = \"yellow\", \"male\" = \"blue\")\n\n# changer la couleur d'un graphique\npenguins |> \n  count(sex) |> \n  ggplot() +\n  aes(x = \"\", y = n, fill = sex) +\n  geom_bar(stat = \"identity\") +\n  coord_polar(\"y\") +\n  scale_fill_manual(values = couleur) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/representation_graphique-4.png){width=672}\n:::\n:::\n\n\n## Variable quantitative\n\nIl y a 5 variables quantitatives, il est possible d'étudier leurs dispersion grâce aux histogrammes ou de calculer les mesures de cette dispersion.\\\n\n::: {.callout-note icon=\"false\"}\nL'une des variables est l'année.\n:::\n\n### Histogramme\n\n::: {.callout-caution icon=\"false\"}\n**Attention** au nombre d'intervalles représenté.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  ggplot() +\n  aes(x = bill_length_mm) +\n  geom_histogram() +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/histogramme-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# changement nombre d'intervalles (10)\npenguins |>\n  ggplot() +\n  aes(x = bill_length_mm) +\n  geom_histogram(bins = 10) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/histogramme-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# largeur de la barre\npenguins |>\n  ggplot() +\n  aes(x = bill_length_mm) +\n  geom_histogram(binwidth = 10) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/histogramme-3.png){width=672}\n:::\n:::\n\n\n### Calcul des mesures de dispersion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n```\n:::\n\n```{.r .cell-code}\nmean(penguins$bill_depth_mm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\n# NA car présence de valeur manquantes\n\nmean(penguins$bill_length_mm, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 43.92193\n```\n:::\n\n```{.r .cell-code}\nmax(penguins$bill_length_mm, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 59.6\n```\n:::\n\n```{.r .cell-code}\npingouins_sans_na <- penguins |> \n  drop_na()\n\nmedian(pingouins_sans_na$bill_length_mm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 44.5\n```\n:::\n\n```{.r .cell-code}\npingouins_sans_na |> \n  summarise(\n    across(\n      .cols = where(is.numeric),\n      .fns = list(\n        moyenne = ~ mean(.x),\n        minimum = ~ min(.x),\n        maximum = ~ max(.x)\n      ),\n      .names = \"{col} {fn}\"\n    )\n  ) |> \n  pivot_longer(everything()) |> \n  separate_wider_delim(\n    name, \n    delim = \" \", \n    names = c(\"variable\", \"mesure\")\n    ) |> \n  pivot_wider(names_from = mesure, values_from = value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  variable          moyenne minimum maximum\n  <chr>               <dbl>   <dbl>   <dbl>\n1 bill_length_mm       44.0    32.1    59.6\n2 bill_depth_mm        17.2    13.1    21.5\n3 flipper_length_mm   201.    172     231  \n4 body_mass_g        4207.   2700    6300  \n5 year               2008.   2007    2009  \n```\n:::\n:::\n\n\n### Boîte à moustaches\n\nGraphique généralisant les données de dispersion.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot() +\n  aes(y = bill_length_mm) +\n  geom_boxplot() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/boite_a_moustaches-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# sur toutes les colonnes numériques\npenguins |> \n  pivot_longer(\n    cols = where(is.numeric)\n  ) |> \n  ggplot() +\n  aes(y = value) +\n  facet_wrap(~ name, scales = \"free_y\") +\n  geom_boxplot() +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/boite_a_moustaches-2.png){width=672}\n:::\n:::\n\n\n### Cas particulier des dates\n\nIl est clair que le traitement de l'année est un peu particulier, à mis chemin entre la variable qualitative et la variable quantitative.\\\nS'il y a peu de dates, comme c'est le cas ici autant la traiter comme une variable qualitative, c'est-à-dire réaliser un tableau de contingence pour voir le nombre d'individus capturés par an.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tableau de contingence\npenguins |> \n  count(year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n   year     n\n  <int> <int>\n1  2007   110\n2  2008   114\n3  2009   120\n```\n:::\n\n```{.r .cell-code}\n# réalisation d'un diagramme en barres\npenguins |> \n  ggplot() +\n  aes(x = year, fill = sex) +\n  geom_bar() +\n  scale_fill_manual(values = couleur) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/annee_variable_qualitative-1.png){width=672}\n:::\n:::\n\n\nSi c'est une date complète, comment travailler dessus ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ajout de la date complète depuis le jeu de données `penguins_raw`\npingouins_modifie <- bind_cols(\n  penguins,\n  date = penguins_raw$`Date Egg`\n) |> \n  mutate(\n    mois = month(date, label = TRUE, abbr = FALSE),\n    jour = day(date),\n    jour_semaine = wday(date, label = TRUE, abbr = FALSE, week_start = 1)\n  )\n\n# repésentation en diagramme en barres\npingouins_modifie |> \n  ggplot() +\n  aes(x = date, fill = jour_semaine) +\n  geom_bar() +\n  facet_wrap(~ year, scales = \"free_x\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/traiter_les_dates-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}