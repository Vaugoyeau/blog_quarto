{
  "hash": "eddace812b9fdc31820c566af686a1f8",
  "result": {
    "markdown": "---\ntitle: \"Initiation à `Quarto`\"\nauthor: \"Marie Vaugoyeau\"\ndate: \"2023/10/03\"\ndate-format: \"D MMMM YYYY\"\ncategories: [twitch, Rnewbies, quarto]\ntoc: true\ntoc-title: Sur cette page\n---\n\n\n[![](chateau_brissac.png){fig-align=\"center\"}](https://500px.com/p/antoinemach?view=photos)\n\n::: {.callout-note icon=\"false\"}\n[**Twitch du 3 octobre 2023**](https://www.twitch.tv/videos/1941574357).\n\nCode disponible sur [GitHub](https://github.com/Vaugoyeau/twitch_quarto_initiation).\n:::\n\n# C'est quoi Quarto ?\n\n![](https://quarto.org/quarto.png)\n\nAprès une dizaine d'année de développement sur `RMarkdown`, [Posit](https://posit.co/) (anciennement RStudio) [a annoncé en 2022](https://posit.co/blog/announcing-quarto-a-new-scientific-and-technical-publishing-system/) la naissance de `Quarto`.\\\nDonc `Quarto` est l'héritier de [RMarkdown](https://quarto.org/quarto.png) qui combien le texte sous format [Markdown](https://quarto.org/docs/authoring/markdown-basics.html) et les portions de code appelé `chunk`.\\\nLe code peut-être en `R` comme en `Python`.\n\nComme `RMarkdown`, sa grande force est de rendre **reproductible**, **répétable** et **réutilisable** les lignes de codes.\n\n::: callout-tip\n## Innovation\n\nIl n'y aura pas ou peu d'innovations sur `RMarkdown` maintenant que `Quarto` existe.\n:::\n\n# Création d'un projet `Quarto`\n\nLa grosse nouveauté entre `RMarkdown` et `Quarto` est que `Quarto` est une infrastructure plus large qui remplace le classique projet RStudio.\n\nPour créer un projet `Quarto`, c'est très simple, il suffit de cliquer sur l'icône bleue projet ou `File > New Project...`.\\\nEnsuite, il faut cliquer sur `Quarto project`. S'il n'apparaît pas ce que RStudio n'est pas à jour. Il est nécessaire de commencer par mettre à jour R et RStudio.\n\nLe projet créé contient trois fichiers :\n\n\\_ Le fichier `_quarto.yml` qui contient les paramétrages du dossier\\\n\\_ Le fichier `nom_du_projet.qmd` qui est un document `Quarto` généré automatiquement\\\n\\_ Le fichier `nom_du_projet.Rproj`, le fichier du projet\n\nLe document `Quarto` généré automatiquement est très simple. Il est là pour comprendre le fonctionnement de base. Il est très utile pour apprendre à manipuler `Quarto`.\n\n# Lecture d'une fichier `Quarto`\n\nLes fichiers `Quarto` ont une composition classique : une en-tête `YAML` facultative avec un enchaînement de **texte** et de **blocs de codes**.\n\nDeux `vues` sont disponibles :\n\n\\_ `Visual` : Qui ressemble à ce qui sera obtenu avec des clics boutons proches d'un logiciel de traitement texte tels que `Word`, `Mot`, `Writer`...\\\n\\_ `Source` : Qui contient le script en `Markdown`\n\n## En-tête `YAML` (facultative)\n\nElle permet de paramétrer les sorties du document mais elle n'est pas obligatoire\n\n::: callout-important\n## Indentation\n\nSi l'indentation (les espaces avant le texte) n'a que peu d'importance dans le code `R`, elle est très importante en `YAML` et doit-être regardé avec attention !\n:::\n\nLe document généré automatiquement ne possède qu'un titre dans l'en-tête.\n\n## Syntaxe du texte\n\nLe texte en `Quarto`, utilise la [syntaxe `Markdown`](https://quarto.org/docs/authoring/markdown-basics.html) :\n\n\\_ Les titres sont caractérisés par des `#` en fonction du niveau : `#Titre de niveau 1`, `##Titre de niveau 2`...\\\n\\_ La mise en forme du texte se fait avec les étoiles ou les impostrophes (apostrophe à l'envers) :\n\n-   Une étoile `*` avant et après la partie à valoriser permet de mettre en *italique* (codé `*italique*`)\\\n-   Deux `**` avant et après mettent en **gras** (codé `**gras**`)\\\n-   Trois `***` avant et après mettent en ***gras et italique*** (codé `***gras et italique***`)\\\n-   Un **double espace** permet de passer à la ligne. Il faut donc toujours mettre deux espaces à la fin de chaque ligne. Sans ces espaces, toutes les lignes sont collées les unes à la suite des autres\\\n-   Pour éditer un `format code` (sans qu'il se lance) pour présenter les packages, les fonctions ou les objets utilisés (comme fait dans ce document), il faut encadrer d'impostrophes\n\nDes images peuvent aussi être intégrées grâce à `![*légende_de_l_image*](adresse_de_l_image.format_de_l_image)`\n\n## Portion de code\n\nLe code est enregistré dans des chuncks délimités par trois impostrophes comme ci-dessous.\\\nLes paramètres du chunk sont précédés de `#|`.\\\nCela permet de donner un nom au chunck avec `#| label: nom_du_chunk` ou de choisir les sorties `#| echo: true` : le code est affiché dans le format de sortie, `#| warning: false` : les messages de type `warning` ne sont pas affichés...\\\nTouts les paramétrages peuvent se retrouver dans [le guide Quatro](https://quarto.org/docs/reference/cells/cells-knitr.html).\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: nom_du_chunk\n#| warning: false\n\n1 + 1\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n::: callout-waring\nSi un des impostrophes est supprimé par erreur, le code ne peut pas se lancer !\\\nIl faut toujours vérifier que les chunks soient bien fermés (fond d'une couleur différente).\n:::\n\n# Modification d'un fichier `Quarto`\n\n## Modification de l'en-tête\n\nLors du Twitch, j'ai montré comment changer le titre et ajouter un.e auteur.trice dans l'en-tête.\n\n```         \n---\ntitle: \"Initiation à *Quarto*\"\nauthor: \"Marie Vaugoyeau\"\n---\n```\n\nIl est aussi possible de modifier le format de sortie pour générer un `pdf` avec un sommaire cliquable `toc: true` :\n\n```         \n---\ntitle: \"Initiation à *Quarto*\"\nauthor: \"Marie Vaugoyeau\"\nformat:\n  pdf: \n    toc: true\n---\n```\n\nOu paramétrer différement deux formats de sortie :\n\n```         \n---\ntitle: \"Initiation à *Quarto*\"\nauthor: \"Marie Vaugoyeau\"\nformat:\n  html: \n    toc: true\n    code-fold: true\n    echo: false\n    eval: false\n  pdf: \n    toc: true\n---\n```\n\n::: callout-tip\n## Format de sortie\n\nPour connaître tous les formats de sorties générés par un fichier `Quarto`, rendez-vous sur [le guide de `Quarto`](https://quarto.org/docs/output-formats/all-formats.html)\n:::\n\n## Utilisation des blocs d'interpellation (*callout*)\n\nJ'ai aussi montrer comme ajouter des boîtes d'interpellations comme celles ci-dessous.\n\n```         \n::: callout-tip\n## Les **statistiques**\n\nEnsemble de méthodes qui ont pour objet la **collecte**, le **traitement** et l'**interprétation** de l'ensemble des **données d'observation** relatives à une **population statistique** (groupe d'individus ou d'unités) ou concernant un phénomène quelconque.\n:::\n```\n\n::: callout-tip\n## Les **statistiques**\n\nEnsemble de méthodes qui ont pour objet la **collecte**, le **traitement** et l'**interprétation** de l'ensemble des **données d'observation** relatives à une **population statistique** (groupe d'individus ou d'unités) ou concernant un phénomène quelconque.\n:::\n\n```         \n::: callout-note\n## Un **bon code**\n\nEst un code qui produit les **résultats attendus** suffisamment vite et **facile à maintenir**\n:::\n```\n\n::: callout-note\n## Un **bon code**\n\nEst un code qui produit les **résultats attendus** suffisamment vite et **facile à maintenir**\n:::\n\n```         \n::: callout-warning\n## A retenir\n\nIl faut réfléchir pour analyser les données de **manière adaptée** et **interpréter correctement** les résultats\n:::\n```\n\n::: callout-warning\n## A retenir\n\nIl faut réfléchir pour analyser les données de **manière adaptée** et **interpréter correctement** les résultats\n:::\n\n```         \n::: callout-important\n## Erreurs à ne pas commettre\n\n-   r fort ne signifie pas une **relation de cause à effet** entre les deux variable\\\n-   r faible ne signifie pas **pas de relation entre les deux variables**. Il peut y avoir une relation non linéaire\\\n:::\n```\n\n::: callout-important\n## Erreurs à ne pas commettre\n\n-   r fort ne signifie pas une **relation de cause à effet** entre les deux variable\\\n-   r faible ne signifie pas **pas de relation entre les deux variables**. Il peut y avoir une relation non linéaire\\\n:::\n\n```         \n::: {.callout-caution collapse=\"true\"}\n## Mieux comprendre l'utilsation du développement  \n  \nCe bloc est un exemple qui ne se développe qu'en cliquant sur la flèche. Il faut utiliser `collapse=\"true\"` comme cela `{.callout-tip/note/warning/important/caution collapse=\"true\"}`.  \n:::\n```\n\n::: {.callout-caution collapse=\"true\"}\n## Mieux comprendre l'utilsation du développement\n\nCe bloc est un exemple qui ne se développe qu'en cliquant sur la flèche. Il faut utiliser `collapse=\"true\"` comme cela `{.callout-tip/note/warning/important/caution collapse=\"true\"}`.\n:::\n\n## Ajout d'un chunk de code\n\nTrès simplement grâce au raccourci clavier `Ctrl + Alt + I` ou le clic bouton carré vert ![](ajout_chunk.png)\n\nIl est aussi possible d'ajouter un calcul simple comme :\\\nLa longueur moyenne de longueur de sepal du jeu de données iris : 6 cm\\\nCodé par La longueur moyenne de longueur de sepal du jeu de données iris : *r mean(iris\\$Sepal.Length) \\|\\> round()* cm avec des impostrophes autours du texte en *italique*.\n\n# Réalisation d'un support de présentation\n\nPour moi, `Quarto` est meilleur que `RMarkdown` pour générer des supports de présentations et comme vu précédemment, le même fichier peut-être généré en `html`, `revealjs`, `pdf`...\n\n::: callout-note\n## Pour faire un support de présentation\n\nLe mieux est généré un nouveau fichier dédié via :\n\n\\_ Un clic-bouton sur le rectangle blanc avec un plus sur fond vert ![](creation_pres.png)\\\n\\_ Dans le menu `File > New File > Quarto Presentation...`\n\n**Tous les choix fais dans la boîte de dialogue peuvent-être modifiés après**\n:::\n\n## Création de nouvelles diapos\n\nDe base, une nouvelle diapo est créé par titre de deuxième niveau `##`. Les titres de premier niveau donne des titres de section : `#`\n\n```         \n---\ntitle: \"Création d'un support\"\nauthor: \"Marie Vaugoyeau\"\nformat: revealjs\n---\n\n## Première diapo\n\n- Création d'une liste\n- Contenant plusieurs objets\n\n## Deuxième diapo\n\nNe contenant que du texte\n\n::: {.callout-tip collapse=\"true\"}\n## Et un **bloc d'interpellation**  \n\nIl en existe 5 sortes :  \n\n- `note` en bleu avec un `i` dans un rond par défaut\n- `warning` en orange avec un `!` dans un triange par défaut\n- `important` en rouge avec un `!` dans un rond par défaut\n- `tip` en vert avec une ampoule par défaut\n- `caution` en jaune avec un cône de chantier par défaut\n\n:::\n```\n\nPour faire des diapos sans titre, il faut les séparer par `---`\n\n```         \n---\ntitle: \"Création d'un support\"\nauthor: \"Marie Vaugoyeau\"\nformat: revealjs\n---\n\n---\n\n- Création d'une liste\n- Contenant plusieurs objets\n\n---\n\nNe contenant que du texte\n\n::: {.callout-tip collapse=\"true\"}\n## Et un **bloc d'interpellation**  \n\nIl en existe 5 sortes :  \n\n- `note` en bleu avec un `i` dans un rond par défaut\n- `warning` en orange avec un `!` dans un triange par défaut\n- `important` en rouge avec un `!` dans un rond par défaut\n- `tip` en vert avec une ampoule par défaut\n- `caution` en jaune avec un cône de chantier par défaut\n\n:::\n```\n\n## Incrementation des puces\n\nLes puces peuvent apparaître pas à pas grâce à l'option `incremental` soit sur un bloc :\n\n```         \n::: {.incremental}\n\n- Création d'une liste\n- Contenant plusieurs objets\n\n:::\n\n::: {.nonincremental}\n\n- Création d'une liste\n- Contenant plusieurs objets\n\n:::\n```\n\nSoit sur tous le document grâce à l'option dans l'en-tête (d'où l'interêt du `nonincremental` d'au-dessus).\n\n```         \nformat:\n  revealjs:\n    incremental: true\n```\n\n## Faire plusieurs colonnes\n\nLa création de colonnes est possible diapos, par diapos grâce à l'option `{.columns}`\n\n```         \n::: {.columns}\n\n::: {.column width=\"40%\"}\n![](https://mvaugoyeau.netlify.app/marie-vaugoyeau.png)\n:::\n\n::: {.column width=\"60%\"}\nBonjour,  \nJe suis **Marie VAUGOYEAU**, accompagnatrice indépendante à l’analyse de données 👩‍💻  \nCe que je préfère faire **c’est aider les chercheu.se.r.s dans la valorisation de leurs données avec R**.  \n  \nEn plus de mes missions, j’aime partager mes connaissances en statistiques et R, en partie sur ce blog mais aussi dans une [newsletter](https://d1154691.sibforms.com/serve/MUIEAGj4fIubg6D4qHb7BoZSxNhzkV4p2L0I7GHpNopbqPeDS1J0SpOgaTDCavroygrDTCukB0La-8s1nsQw5wCANT5UP64en1GudsGbKhGVlwbvP_bJdAJ0ECF9BOZ1swRKEnKlnWzTHpLjknJvrCXiH_xw4F_go_2kVB0dWWrkJzRoE22BXImtgVOu29gBxx2hjFkINdeW7Cae?), sur [Twitch](https://www.twitch.tv/marievaugoyeau) et [LinkedIn](https://www.linkedin.com/in/marie-vaugoyeau-72ab64153).  \nJ’ai aussi écrit [un livre](https://www.editions-eni.fr/livre/langage-r-et-statistiques-initiation-a-l-analyse-de-donnees-9782409036934) 📕\n:::\n\n::::\n```\n\n## Ajout du scrolling pour les présentations `reactjs`\n\nLorsqu'il y a beaucoup d'information sur une même diapo, le texte ne peut pas être affiché en entier. En effet, **la taille du texte ne varie pas en fonction de la place sur la page**.\\\nPlutôt que de réduire la taille de la police, il est possible d'ajouter du `scrolling` soit pour une diapo sur la ligne du titre `## Titre de la diapo {.scrollable}` soit dans l'en-tête pour toutes les diapos\n\n```         \nformat:\n  revealjs:\n    incremental: true\n    scrollable: true\n```\n\n# Conclusion\n\nImpossible de parler de toutes les foncitonnalités possible, j'espère que cet article permettra à ceratin.e.s de se lancer dans l'utilisation de `Quarto` ! Pour en savoir plus, rendez-vous sur [la page dédiée](https://quarto.org/docs/guide/) !\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}