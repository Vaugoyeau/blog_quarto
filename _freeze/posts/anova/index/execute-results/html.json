{
  "hash": "06040b786fc4757c18bd9967360b56b6",
  "result": {
    "markdown": "---\ntitle: \"Analyse des variances : **ANOVA** et **Kruskal-Wallis**\"\nauthor: \"Marie Vaugoyeau\"\ndate: \"2023/11/07\"\ndate-format: \"D MMMM YYYY\"\ncategories: [twitch, Rnewbies, analyse de données, statistiques]\ntoc: true\ntoc-title: Sur cette page\n---\n\n\n[![](lego.png){fig-align=\"center\"}](https://500px.com/p/antoinemach?view=photos)\n\n::: {.callout-note icon=\"false\"}\n[**Twitch du 7 novembre 2023**](https://www.twitch.tv/videos/1971037323).\n\nCode disponible sur [GitHub](https://github.com/Vaugoyeau/twitch_anova).\n:::\n\n# Définition de l'ANOVA  \n  \n::: callout-tip\n## ANOVA : Analyse des variances  \n  \nPermet de savoir si **deux échantillons ou plus** sont issus d’une **même population** ou pour le dire autrement, les groupes créées ont-ils la **même moyenne**.  \n:::\n  \nL'ANOVA permet d'étudier l'influence d'au moins une **variable qualitative** ayant **deux modalités ou plus**, sur une **variable quantitative**.  \nD'un point de vue pratique, l'ANOVA cherche à savoir si les **moyennes des groupes** sont globalement **différentes** ou pour le dire autrement, si la **variation intragroupe est plus faible** que la **variation intergroupe**.  \nLe principe de l'ANOVA est de décomposer la **variabilité totale des données** en deux :  \n\n_ la **variabilité factorielle** : la variabilité entre groupes, c'est-à-dire la différence entre la moyenne de toutes les données et les moyennes de chaque groupe (cf. @fig-var-fact).  \n_ la **variabilité résiduelle** : la variabilité qui reste une fois que la variabilité due au groupe est retirée c'est-à-dire la différence entre la moyenne du groupe et la valeur de chaque échantillon (cf. @fig-var-res).  \n  \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\niris_moyenne <- iris |> \n  group_by(Species) |> \n  summarise(moyenne = mean(Sepal.Length))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(x = Species, y = Sepal.Length, color = Species) +\n  geom_jitter(alpha = 0.3) +\n  geom_hline(\n    aes(yintercept = mean(Sepal.Length))\n    ) +\n  geom_errorbar(\n    aes(\n      ymin = moyenne, \n      y = 5.84, ymax = moyenne\n      ), \n    data = iris_moyenne, \n    linewidth = 1\n    ) +\n  geom_spoke(\n    aes(\n      y = moyenne, \n      radius = mean(iris$Sepal.Length) - moyenne, \n      angle = 1.57\n      ), \n    data = iris_moyenne, \n    linetype = \"dashed\"\n    ) +\n  theme_classic() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![Variabilité factorielle](index_files/figure-html/fig-var-fact-1.png){#fig-var-fact width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(x = Species, y = Sepal.Length, color = Species) +\n  geom_jitter(alpha = 0.3) +\n  geom_errorbar(\n    aes(\n      ymin = moyenne, \n      y = 5.84, \n      ymax = moyenne\n      ), \n    data = iris_moyenne, \n    linewidth = 1\n    ) +\n  geom_spoke(\n    aes(\n      radius = iris_moyenne$moyenne - Sepal.Length, \n      angle = 1.57\n      ), \n    data = iris  |> \n      group_by(Species) |> \n      slice(3) |> \n      ungroup(), \n    linetype = \"dashed\"\n    ) +\n    geom_spoke(\n      aes(\n        radius = iris_moyenne$moyenne - Sepal.Length, \n        angle = 1.57\n        ), \n      data = iris |> \n        group_by(Species) |> \n        slice(11) |> \n        ungroup(), \n      linetype = \"dashed\"\n      ) +\n  geom_point(\n    data = iris |> \n      group_by(Species) |> \n      slice(c(3, 11)) |> \n      ungroup()\n    ) +\n  theme_classic() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![Variabilité résiduelle](index_files/figure-html/fig-var-res-1.png){#fig-var-res width=672}\n:::\n:::\n\n  \n# Les limites d'utilisations  \n## Indépendance des données  \nLes données doivent provenir d'un échantillonnage aléatoire et les groupes doivent-être indépendants entre eux.  \n\n## Normalité des données  \nLes données au sein de chaque groupe doivent suivre une loi normale ou être approximé par une loi normale (n > 30).   \n  \n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  iris$Sepal.Length\nW = 0.97609, p-value = 0.01018\n```\n:::\n\n```{.r .cell-code}\n# les données ne suivent pas une loi normale\n\nmap(\n  .x = c(iris$Species |> levels()),\n  .f = ~shapiro.test(filter(iris, Species == .x)$Sepal.Length)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Length\nW = 0.9777, p-value = 0.4595\n\n\n[[2]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Length\nW = 0.97784, p-value = 0.4647\n\n\n[[3]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Length\nW = 0.97118, p-value = 0.2583\n```\n:::\n\n```{.r .cell-code}\n# les données au sein de chaque groupe suivent des lois normales\n```\n:::\n\n  \n## Homogénéité des variances  \nLes groupes doivent avoir une variance similaire.  \nLe test de Bartlett permet de tester la variance de plus de deux groupes.  \n\n::: {.cell}\n\n```{.r .cell-code}\nbartlett.test(Sepal.Length ~ Species, data = iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  Sepal.Length by Species\nBartlett's K-squared = 16.006, df = 2, p-value = 0.0003345\n```\n:::\n\n```{.r .cell-code}\niris |> \n  left_join(iris_moyenne) |> \n  mutate(sepal_length_centre = Sepal.Length - moyenne) |> \n  ggplot() +\n  aes(x = Species, color = Species, y = sepal_length_centre) +\n  geom_jitter() +\n  theme_classic()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(Species)`\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/egalite-des-variances-1.png){width=672}\n:::\n:::\n\n\n::: callout-warning\nIl ne faut pas faire d'ANOVA ici, les groupes n'ont pas la même variance !  \n:::\n  \n# Réalisation d'une ANOVA  \nComme la longueur des sépales ne peut pas être utilisée, on va le faire sur la largeur des sépales.  \n  \n## Vérification des données   \n\n::: {.cell}\n\n```{.r .cell-code}\nmap(\n  .x = c(iris$Species |> levels()),\n  .f = ~shapiro.test(filter(iris, Species == .x)$Sepal.Width)\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Width\nW = 0.97172, p-value = 0.2715\n\n\n[[2]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Width\nW = 0.97413, p-value = 0.338\n\n\n[[3]]\n\n\tShapiro-Wilk normality test\n\ndata:  filter(iris, Species == .x)$Sepal.Width\nW = 0.96739, p-value = 0.1809\n```\n:::\n\n```{.r .cell-code}\nbartlett.test(Sepal.Width ~Species, data = iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  Sepal.Width by Species\nBartlett's K-squared = 2.0911, df = 2, p-value = 0.3515\n```\n:::\n:::\n\n\nLes données suivent des lois normales et les variances sont similaires.  \n  \n## Réalisation de l'ANOVA  \n  \n::: callout-important\n\nLa détermination d'un modèle ANOVA doit-être réalisé avec la fonction `aov()` du package `{stats}`. Les fonctions `anova()` du package `{stats}` ou `Anova()` du package `{car}` permet de réaliser une analyse de variance/déviance sur un modèle donc par exemple le résultat de `aov()` mais pas que ^^  \n:::  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova_sepal_largeur <- aov(Sepal.Width ~ Species, data  = iris)\n\nsummary(anova_sepal_largeur)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Df Sum Sq Mean Sq F value Pr(>F)    \nSpecies       2  11.35   5.672   49.16 <2e-16 ***\nResiduals   147  16.96   0.115                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nanova(anova_sepal_largeur)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: Sepal.Width\n           Df Sum Sq Mean Sq F value    Pr(>F)    \nSpecies     2 11.345  5.6725   49.16 < 2.2e-16 ***\nResiduals 147 16.962  0.1154                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n::: callout-important\n## Oublié dans le [live](https://www.twitch.tv/videos/1971037323)  \n\nJ'ai oublié de le préciser dans le [live](https://www.twitch.tv/videos/1971037323) sur twitch mais il faut penser à vérifier que les résidus (la différence entre les valeurs prédites et observées) suivent une loi normales et soient homogènes !  \n:::  \n  \n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(anova_sepal_largeur$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  anova_sepal_largeur$residuals\nW = 0.98948, p-value = 0.323\n```\n:::\n\n```{.r .cell-code}\nbartlett.test(anova_sepal_largeur$residuals ~ iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  anova_sepal_largeur$residuals by iris$Species\nBartlett's K-squared = 2.0911, df = 2, p-value = 0.3515\n```\n:::\n:::\n\nLes **résidus** suivent bien une **loi normale** et sont **homogènes** donc le **modèle est validé**.    \n  \nIl est aussi possible de le vérifier graphiquement grâce à la fonction `plot()` appliquée sur le modèle ajusté.  \n  \n\n::: {#fig-verifier-la-validite-du-modele .cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nplot(anova_sepal_largeur)\n```\n\n::: {.cell-output-display}\n![Résidus en fonction des valeurs prédites](index_files/figure-html/fig-verifier-la-validite-du-modele-1.png){#fig-verifier-la-validite-du-modele-1 width=672}\n:::\n\n::: {.cell-output-display}\n![QQplot : Vérification de la normalité des résidus](index_files/figure-html/fig-verifier-la-validite-du-modele-2.png){#fig-verifier-la-validite-du-modele-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Vérification de l'homogénéité des variances](index_files/figure-html/fig-verifier-la-validite-du-modele-3.png){#fig-verifier-la-validite-du-modele-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Vérification de l'effet de levier des individus](index_files/figure-html/fig-verifier-la-validite-du-modele-4.png){#fig-verifier-la-validite-du-modele-4 width=672}\n:::\n\nVérification graphique du modèle\n:::\n\n\nPour la vérification graphique :  \n\n_ Le QQ-plot, @fig-verifier-la-validite-du-modele-2 montre que les résidus suivent une loi normale  \n_ La @fig-verifier-la-validite-du-modele-3 montre que les résidus sont homogènes  \n  \n**L'ANOVA réalisée est donc validée !**  \n  \n## Test post-hoc de Tukey  \nAfin de savoir quel(s) groupe(s) est(sont) différent(s), il faut utiliser un test post-hoc de Tukey.  \n\n::: {.cell}\n\n```{.r .cell-code}\nTukeyHSD(anova_sepal_largeur)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = Sepal.Width ~ Species, data = iris)\n\n$Species\n                       diff         lwr        upr     p adj\nversicolor-setosa    -0.658 -0.81885528 -0.4971447 0.0000000\nvirginica-setosa     -0.454 -0.61485528 -0.2931447 0.0000000\nvirginica-versicolor  0.204  0.04314472  0.3648553 0.0087802\n```\n:::\n\n```{.r .cell-code}\nrstatix::tukey_hsd(anova_sepal_largeur)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n  term    group1     group2     null.value estimate conf.low conf.high    p.adj\n* <chr>   <chr>      <chr>           <dbl>    <dbl>    <dbl>     <dbl>    <dbl>\n1 Species setosa     versicolor          0   -0.658  -0.819     -0.497 3.10e-14\n2 Species setosa     virginica           0   -0.454  -0.615     -0.293 1.36e- 9\n3 Species versicolor virginica           0    0.204   0.0431     0.365 8.78e- 3\n# ℹ 1 more variable: p.adj.signif <chr>\n```\n:::\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(x = Species, color = Species, y = Sepal.Width) +\n  geom_boxplot() +\n  geom_jitter(alpha = 0.3) +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/test-post-hoc-tukey-1.png){width=672}\n:::\n:::\n\n  \n# Réalisation d'une ANOVA non paramétrique : test de Kruskal-Wallis  \nRéalisation sur les longueurs de sépales qui ne sont pas homogènes entre les groupes  \n  \n## Fonctionnement et limites  \n\n::: callout-tip\n## Kruskal-Wallis    \n  \nPermet de savoir si **deux échantillons ou plus** sont issus d’une **même population** ou pour le dire autrement, les groupes créées ont-ils la **même médiane**.  \n:::\n\nLe test de Kruskal-Wallis se base sur le rang des données.  \n\n::: {.cell}\n\n```{.r .cell-code}\niris |> \n  arrange(Sepal.Length) |> \n  rowid_to_column(var = \"rang\") |> \n  group_by(Species) |> \n  summarise(somme_rang = sum(rang)) |> \n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Species    somme_rang\n  <fct>           <int>\n1 setosa           1448\n2 versicolor       4115\n3 virginica        5762\n```\n:::\n:::\n\n\nUne fois que le rang de chaque groupe calculé, la statistique de test va être calculé et comparer à une valeur seuil.  \n\n::: callout-warning\n## Les limites    \n  \n_ échantillonnage aléatoire  \n_ indépendance des groupes  \n_ Plus de 5 observations par groupe  \n:::\n\n## Utilisation de la fonction `kruskal.test()` du package `{stats}`  \nComme la longueur des sépales n'avaient pas la même variance en fonction de l'espèce, il n'est pas possible de réaliser une ANOVA.  \nLe test de Kruskal-Wallis est conseillé ici.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkruskal.test(Sepal.Length ~ Species, data  = iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  Sepal.Length by Species\nKruskal-Wallis chi-squared = 96.937, df = 2, p-value < 2.2e-16\n```\n:::\n:::\n\n\n## Test-post hoc de Nemenyi  \n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(\n  PMCMRplus::kwAllPairsNemenyiTest(\n    data = iris,\n    Sepal.Length ~ Species\n  )\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in kwAllPairsNemenyiTest.default(c(5.1, 4.9, 4.7, 4.6, 5, 5.4, 4.6, :\nTies are present, p-values are not corrected.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n\tPairwise comparisons using Tukey-Kramer-Nemenyi all-pairs test with Tukey-Dist approximation\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ndata: Sepal.Length by Species\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nalternative hypothesis: two.sided\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nP value adjustment method: single-step\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nH0\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                            q value   Pr(>|q|)    \nversicolor - setosa == 0      8.628 3.1659e-09 ***\nvirginica - setosa == 0      13.764 3.4084e-14 ***\nvirginica - versicolor == 0   5.137 0.00082097 ***\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSignif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(x = Species, color = Species, y = Sepal.Length) +\n  geom_boxplot() +\n  geom_jitter(alpha = 0.3) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/test-post-hoc-nemenyi-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}